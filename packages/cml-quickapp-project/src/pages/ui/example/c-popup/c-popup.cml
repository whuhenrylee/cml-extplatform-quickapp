<template>
  <page title="c-popup演示">
    <!--<c-header title="c-popup"></c-header>-->
    <popup c-if="{{showPop}}" show="{{showPop}}" mask="{{mask}}" c-bind:close="closePopup"></popup>
    <popup c-if="{{show2}}" show="{{show2}}" mask="{{mask}}" c-bind:close="closePopup" position="{{position}}">
      <view style="{{contentStyle}}"><text style="font-size: 28cpx;">content</text></view>
    </popup>
    <view class="button-wrapper">
    <text c-bind:tap="showPopup" class="btn" value="show popup"></text>
    <text c-bind:tap="showPopup2" class="btn" value="left/top/right/bottom/center"></text>
    </view>
  </page>
</template>
<script>
    class CPopupDemo {

        data = {
            mask: true,
            showPop: false,
            show2: false,
            position: '',
            pos: ['left', 'top', 'right', 'bottom', ''],
            posi: 0
        }

        computed = {
            contentStyle() {
                let style;
                switch (this.position) {
                    case 'left':
                        style = 'width:200cpx;background-color:#ffffff;'
                        break;
                    case 'top':
                        style = 'height:200cpx;background-color:#ffffff;'
                        break;
                    case 'right':
                        style = 'width:200cpx;background-color:#ffffff;'
                        break;
                    case 'bottom':
                        style = 'height:200cpx;background-color:#ffffff;'
                        break;
                    default:
                        style="display:block;width: 500cpx;height: 200cpx;background-color: #fff;";
                        break;
                }
                return style;
            }
        }

        watch  = {
        }

        methods = {
            showPopup() {
                this.showPop = true;
            },
            showPopup2() {
                this.position = this.pos[this.posi++];
                this.posi = this.posi % 5;
                this.show2 = true;
            },
            closePopup() {
                this.showPop = false;
                this.show2 = false;
            }
        }

        beforeCreate() {
        }

        created() {
        }

        beforeMount() {
        }

        mounted() {
        }

        beforeDestroy() {
        }

        destroyed() {
        }
    }

    export default new CPopupDemo();
</script>
<style scoped>
  .container {
    display: flex;
    flex-direction: column;
    flex: 1;
    background-color: #f8f8f8;
  }
  .btn{
    width:750cpx;
    height:80cpx;
    display:flex;
    flex-direction:row;
    justify-content: center;
    text-align: center;
    margin-top: 20cpx;
    backgroundColor: #87CEFA;
    color:#000000;
  }
  .button-wrapper {
    position: absolute;
    z-index: 9999;
    width: 100%;
    flex: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }
</style>
<script cml-type="json">
    {
        "base": {
        "usingComponents": {
                "popup": "cml-quickapp-ui/components/c-popup/c-popup"
        },
        "navigationBarTitleText": "c-popup",
            "backgroundTextStyle": "dark",
            "backgroundColor": "#E2E2E2"
    }
    }
</script>
